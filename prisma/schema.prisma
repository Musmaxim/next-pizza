generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
    id        Int      @id @default(autoincrement())
    fullName  String
    email     String   @unique
    password  String
    role      UserRole @default(USER)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    provider   String?
    providerId String?

    cart             Cart?
    orders           Order[]
    verificationCode VerificationCode?
}

model Category {
    id      Int       @id @default(autoincrement())
    name    String    @unique
    product Product[]
}

model Product {
    id          Int           @id @default(autoincrement())
    name        String
    image       String
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
    category    Category      @relation(fields: [categoryId], references: [id])
    categoryId  Int
    ingredients Ingredient[]
    items       ProductItem[]
}

model ProductItem {
    id        Int        @id @default(autoincrement())
    price     Int
    size      Int?
    pizzaType Int?
    product   Product    @relation(fields: [productId], references: [id])
    productId Int
    cartItems CartItem[]
}

model Ingredient {
    id        Int      @id @default(autoincrement())
    name      String
    price     Int
    imageUrl  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    products  Product[]
    cartItems CartItem[]
}

model Cart {
    id          Int        @id @default(autoincrement())
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt
    user        User?      @relation(fields: [userId], references: [id])
    userId      Int?       @unique
    totalAmount Int        @default(0)
    token       String
    items       CartItem[]
}

model CartItem {
    id            Int         @id @default(autoincrement())
    quantity      Int
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt
    prodictItem   ProductItem @relation(fields: [productItemId], references: [id])
    productItemId Int
    cart          Cart        @relation(fields: [cartId], references: [id])
    cartId        Int

    ingredients Ingredient[]
}

model Order {
    id          Int         @id @default(autoincrement())
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    user        User?       @relation(fields: [userId], references: [id])
    userId      Int?
    token       String
    totalAmount Int
    status      OrderStatus
    paymentId   String?
    items       Json
    fullName    String
    address     String
    email       String
    phone       String
    comment     String
}

model VerificationCode {
    id        Int      @id @default(autoincrement())
    user      User     @relation(fields: [userId], references: [id])
    userId    Int      @unique
    code      String
    createdAt DateTime @default(now())
}

enum OrderStatus {
    PENDING
    SUCCEEDED
    CANCELLED
}

enum UserRole {
    USER
    ADMIN
}
